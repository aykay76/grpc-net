// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: environment.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcEnvironment {
  public static partial class EnvironmentService
  {
    static readonly string __ServiceName = "environment.EnvironmentService";

    static readonly grpc::Marshaller<global::GrpcEnvironment.KeyValuePair> __Marshaller_environment_KeyValuePair = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcEnvironment.KeyValuePair.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcEnvironment.KeyValuePair, global::GrpcEnvironment.KeyValuePair> __Method_GetEnvironmentVariable = new grpc::Method<global::GrpcEnvironment.KeyValuePair, global::GrpcEnvironment.KeyValuePair>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEnvironmentVariable",
        __Marshaller_environment_KeyValuePair,
        __Marshaller_environment_KeyValuePair);

    static readonly grpc::Method<global::GrpcEnvironment.KeyValuePair, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetEnvironmentVariable = new grpc::Method<global::GrpcEnvironment.KeyValuePair, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetEnvironmentVariable",
        __Marshaller_environment_KeyValuePair,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::GrpcEnvironment.KeyValuePair> __Method_GetEnvironmentVariables = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::GrpcEnvironment.KeyValuePair>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetEnvironmentVariables",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_environment_KeyValuePair);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcEnvironment.EnvironmentReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of EnvironmentService</summary>
    [grpc::BindServiceMethod(typeof(EnvironmentService), "BindService")]
    public abstract partial class EnvironmentServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GrpcEnvironment.KeyValuePair> GetEnvironmentVariable(global::GrpcEnvironment.KeyValuePair request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SetEnvironmentVariable(global::GrpcEnvironment.KeyValuePair request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetEnvironmentVariables(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::IServerStreamWriter<global::GrpcEnvironment.KeyValuePair> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for EnvironmentService</summary>
    public partial class EnvironmentServiceClient : grpc::ClientBase<EnvironmentServiceClient>
    {
      /// <summary>Creates a new client for EnvironmentService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public EnvironmentServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for EnvironmentService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public EnvironmentServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected EnvironmentServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected EnvironmentServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GrpcEnvironment.KeyValuePair GetEnvironmentVariable(global::GrpcEnvironment.KeyValuePair request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEnvironmentVariable(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcEnvironment.KeyValuePair GetEnvironmentVariable(global::GrpcEnvironment.KeyValuePair request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEnvironmentVariable, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcEnvironment.KeyValuePair> GetEnvironmentVariableAsync(global::GrpcEnvironment.KeyValuePair request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEnvironmentVariableAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcEnvironment.KeyValuePair> GetEnvironmentVariableAsync(global::GrpcEnvironment.KeyValuePair request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEnvironmentVariable, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetEnvironmentVariable(global::GrpcEnvironment.KeyValuePair request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetEnvironmentVariable(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetEnvironmentVariable(global::GrpcEnvironment.KeyValuePair request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetEnvironmentVariable, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SetEnvironmentVariableAsync(global::GrpcEnvironment.KeyValuePair request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetEnvironmentVariableAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SetEnvironmentVariableAsync(global::GrpcEnvironment.KeyValuePair request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetEnvironmentVariable, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::GrpcEnvironment.KeyValuePair> GetEnvironmentVariables(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEnvironmentVariables(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::GrpcEnvironment.KeyValuePair> GetEnvironmentVariables(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetEnvironmentVariables, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override EnvironmentServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EnvironmentServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(EnvironmentServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetEnvironmentVariable, serviceImpl.GetEnvironmentVariable)
          .AddMethod(__Method_SetEnvironmentVariable, serviceImpl.SetEnvironmentVariable)
          .AddMethod(__Method_GetEnvironmentVariables, serviceImpl.GetEnvironmentVariables).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EnvironmentServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetEnvironmentVariable, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcEnvironment.KeyValuePair, global::GrpcEnvironment.KeyValuePair>(serviceImpl.GetEnvironmentVariable));
      serviceBinder.AddMethod(__Method_SetEnvironmentVariable, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcEnvironment.KeyValuePair, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.SetEnvironmentVariable));
      serviceBinder.AddMethod(__Method_GetEnvironmentVariables, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::GrpcEnvironment.KeyValuePair>(serviceImpl.GetEnvironmentVariables));
    }

  }
}
#endregion
